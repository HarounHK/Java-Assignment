package GUI;

import javax.swing.*;

import java.awt.*;
import java.awt.event.*;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;


public class Screen extends JFrame implements KeyListener, MouseListener, ActionListener, FocusListener
{

	private String word;
	
	JFrame frame1;
    JPanel panel1;
    JPanel panel2;
    JButton button1;
    JButton button2;
    JLabel label1;
    JTextField textField1;
    JTextArea textarea1;
        
    File folder = new File("C:\\Users\\harou\\eclipse-workspace\\Java-Assignment1\\TextFiles"); // the folder containing the text files
    ArrayList<File> files = new ArrayList<File>(); // create an ArrayList to store the files
    
    int errorcount = 0;
    
    public Screen(String title)
    {
    	
        frame1 = new JFrame(title);
        frame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame1.setSize(1000,600);
        frame1.setLocationRelativeTo(null);

        panel1 = new JPanel();
        frame1.add(panel1);
        panel1.setLayout(null);
        panel1.setBackground(Color.white);
        
        panel2 = new JPanel();
        panel2.setLayout(null);
        panel2.setBackground(Color.white);
        
        
        textField1 = new JTextField();
        textField1.setBounds(300, 250, 400, 40);
        panel1.add(textField1);
        textField1.setBackground(Color.white);
        textField1.addFocusListener(this);
        textField1.addKeyListener(this);
        
        textField1.setBorder(BorderFactory.createLineBorder(Color.black, 2));
        textField1.setFont(new Font("Consolas", Font.PLAIN, 20));
        textField1.setBackground(Color.WHITE);
        textField1.setForeground(Color.black);
        textField1.setCaretColor(Color.black);
        textField1.setText("Search...");
        textField1.setColumns(10);
        
        
        textarea1 = new JTextArea("",10,40);
        textarea1.setBounds(300, 300, 500, 200);
        textarea1.setBorder(BorderFactory.createLineBorder(Color.black, 2));
        textarea1.setLineWrap(true);
        panel1.add(textarea1);
        textarea1.addFocusListener(this);
        textarea1.addKeyListener(this);
        textarea1.addMouseListener(this);
        
        textarea1.setFont(new Font("Consolas", Font.PLAIN, 14));
        textarea1.setBackground(Color.white);
        textarea1.setForeground(Color.black);
        textarea1.setCaretColor(Color.black);
        
        
        label1 = new JLabel("HKSearch");
        label1.setBounds(300, 180, 400, 60);
        panel1.add(label1);
        label1.setFont(new Font("Consolas", Font.BOLD, 60));
        label1.setForeground(Color.black);
                
        button1 = new JButton("Submit");
        button1.setBounds(700, 250, 80, 39);
        panel1.add(button1);
        button1.setBorder(BorderFactory.createLineBorder(Color.black, 2));
        button1.setBackground(new Color(255,255,255));
        button1.setForeground(Color.black);
        button1.addMouseListener(this);
        button1.setToolTipText("Searc for word in files");
        
        
        button2 = new JButton("Clear");
        button2.setBounds(800, 250, 80, 39);
        panel1.add(button2);
        button2.setBorder(BorderFactory.createLineBorder(Color.black, 2));
        button2.setBackground(new Color(255,255,255));
        button2.setForeground(Color.black);
        button2.addMouseListener(this);
        button2.setToolTipText("Clear the text area");

        frame1.setVisible(true);

    }


	@Override
    public void actionPerformed(ActionEvent e)
    {
        
    }

    @Override
    public void mouseClicked(MouseEvent e)
    {
    	if (e.getSource() == button1)
    	{   
    		errorcount = 0;

            word =  textField1.getText();
            
            files.clear();//clearing files list so it doesn't re-loop over the same files and re display them over and over
            
            for (File file : folder.listFiles()) 
            { // loop through each file in the folder
                    files.add(file); // add the file to the list
            }
        }
            
    	for (int i = 0; i < files.size(); i++) 
    	{ // loop through each file in the list
    		
                File file = files.get(i); // get the i-th file in the list
                
                try {
                    Scanner scanner = new Scanner(file); // create a Scanner to read the file
                    int count = 0;
                    
                    while (scanner.hasNextLine()) 
                    { // loop through each line in the file
                    	
                                       	
                    	
                        String line = scanner.nextLine(); // read the next line
                                                
                        if (line.contains(word))
                        {
                        	count++;
                        	errorcount++;
                        
                        }
                        
                        

                        
                    }
                    
                    
                    scanner.close(); // close the scanner to free up resources
                    
                    if (count > 0) 
                    { // if the word appears in the file, print the file name and count
                        //System.out.println(file.getName() + ": " + count);
                    	textarea1.append(file.getName() + ": " + count+"\n");
                    	
                    }
                    
                    
                    if (errorcount <= 0) 
        	        { // if the word does not appear in any of the files, display this message
                    	textarea1.append("The word "+word+" is not present in any of the files located here.\n");
        	            
        	            
        	            errorcount++;
        	        } 
                    
                	} catch (IOException e1) 
                	{ // handle any IO errors
	                    System.out.println("Error reading file " + file.getName() + ": " + e1.getMessage());
                	}
                
            }

    
    	if (e.getSource() == button2)
    	{
        	
        	textarea1.setText(null);
        	
        }
        
    	
     }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    @Override
    public void focusGained(FocusEvent e) {

    }

    @Override
    public void focusLost(FocusEvent e)
    {
    	 
    }


    
    
	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void keyPressed(KeyEvent e) 
	{
		if (e.getSource() == textField1)
    	{
			if (e.getKeyCode() == KeyEvent.VK_ENTER)
	    	{
	            JOptionPane.showMessageDialog(this,"Enter!");
	    		
	        }

        }
	
	}


	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
}



